// Mocks generated by Mockito 5.3.2 from annotations
// in pylons_wallet/test/widget_testing/pages/gesture_for_detail_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pylons_wallet/model/favorites.dart' as _i6;
import 'package:pylons_wallet/model/nft.dart' as _i4;
import 'package:pylons_wallet/services/repository/repository.dart' as _i2;
import 'package:pylons_wallet/utils/favorites_change_notifier.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRepository_0 extends _i1.SmartFake implements _i2.Repository {
  _FakeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoritesChangeNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesChangeNotifier extends _i1.Mock
    implements _i3.FavoritesChangeNotifier {
  MockFavoritesChangeNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Repository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.Repository);
  @override
  List<_i4.NFT> get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: <_i4.NFT>[],
      ) as List<_i4.NFT>);
  @override
  set favorites(List<_i4.NFT>? _favorites) => super.noSuchMethod(
        Invocation.setter(
          #favorites,
          _favorites,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i5.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> addToFavorites(
          {required _i6.FavoritesModel? favoritesModel}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorites,
          [],
          {#favoritesModel: favoritesModel},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> removeFromFavorites({required String? recipeId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorites,
          [],
          {#recipeId: recipeId},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
