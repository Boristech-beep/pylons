plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    def versionPropsFile = file('version.properties')
    def buildInc = 0
    def runTasks = gradle.startParameter.taskNames
    for (String item: runTasks)
    if(item.contains('assemble') || item.contains('assembleRelease')) {
        buildInc = 1
    }

    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['MAJOR_VERSION'] = "1"
        versionProps['MINOR_VERSION'] = "0"
        versionProps['VERSION_CODE'] = "0"
        versionProps.store(versionPropsFile.newWriter(), null)
    }
    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
        versionProps['VERSION_CODE'] = (versionProps['VERSION_CODE'].toInteger() + buildInc).toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    defaultConfig {
        applicationId "tech.pylons.easel"
        minSdkVersion 16
        targetSdkVersion 31
        multiDexEnabled true
        versionCode versionProps['VERSION_CODE'].toInteger()
        versionName "${versionProps['MAJOR_VERSION']}.${versionProps['MINOR_VERSION']}.${versionProps['VERSION_CODE']}"

        buildConfigField "String", "APP_NAME", "\"Easel\""
        buildConfigField "String", "IMGUR_CLIENT_ID", apikeyProperties['IMGUR_CLIENT_ID']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    signingConfigs {
        release {
            storeFile file('../keystore.jks')
            storePassword "tech.pylons"
            keyAlias "key_tech_pylon"
            keyPassword "tech.pylons"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DISCLAIMER'
    }
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "${applicationId}_${variant.buildType.name}_${variant.versionName}.apk"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.startup:startup-runtime:1.1.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'com.beust:klaxon:5.5'
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Import Pylons SDK (droidwallet)
//    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    implementation "tech.pylons:droidwallet:0.1.1"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // Moshi
    implementation 'com.squareup.moshi:moshi:1.12.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.12.0'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'

    def spongycastleVer = "1.58.0.0"
    implementation "com.madgag.spongycastle:core:$spongycastleVer"
    implementation "com.madgag.spongycastle:prov:$spongycastleVer"
    implementation "com.madgag.spongycastle:bcpkix-jdk15on:$spongycastleVer"
    implementation "com.madgag.spongycastle:bcpg-jdk15on:$spongycastleVer"

    // desugaring
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
}