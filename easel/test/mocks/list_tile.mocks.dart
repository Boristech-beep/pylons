// Mocks generated by Mockito 5.3.2 from annotations
// in easel_flutter/test/widget/draft_list_tile_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i3;

import 'package:easel_flutter/screens/creator_hub/widgets/viewmodel/draft_list_tile_viewmodel.dart'
    as _i2;
import 'package:easel_flutter/screens/creator_hub/widgets/viewmodel/nft_gridview_viewmodel.dart'
    as _i5;
import 'package:easel_flutter/screens/creator_hub/widgets/viewmodel/nft_list_tile_viewmodel.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DraftListViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockDraftListViewModel extends _i1.Mock
    implements _i2.DraftListViewModel {
  MockDraftListViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void startPublishingFlowAgain(
          {required _i3.VoidCallback? startPublishingFlowAgainPressed}) =>
      super.noSuchMethod(
        Invocation.method(
          #startPublishingFlowAgain,
          [],
          {#startPublishingFlowAgainPressed: startPublishingFlowAgainPressed},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NftListViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockNftListViewModel extends _i1.Mock implements _i4.NftListViewModel {
  MockNftListViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void onViewOnPylons({required _i3.VoidCallback? onViewOnPylonsPressed}) =>
      super.noSuchMethod(
        Invocation.method(
          #onViewOnPylons,
          [],
          {#onViewOnPylonsPressed: onViewOnPylonsPressed},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NftGridviewViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockNftGridviewViewModel extends _i1.Mock
    implements _i5.NftGridviewViewModel {
  MockNftGridviewViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void onViewOnPylons({required _i3.VoidCallback? onViewOnPylonsPressed}) =>
      super.noSuchMethod(
        Invocation.method(
          #onViewOnPylons,
          [],
          {#onViewOnPylonsPressed: onViewOnPylonsPressed},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void startPublishingFlowAgain(
          {required _i3.VoidCallback? startPublishingFlowAgainPressed}) =>
      super.noSuchMethod(
        Invocation.method(
          #startPublishingFlowAgain,
          [],
          {#startPublishingFlowAgainPressed: startPublishingFlowAgainPressed},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i3.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
