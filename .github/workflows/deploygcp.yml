name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: us-central1-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: pylons-node # Add your deployment name here.
  IMAGE: gcr.io/zinc-interface-241613/github.com/pylons-tech/pylons

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER \
          --zone $GKE_ZONE \
          --project $PROJECT_ID 
        helm upgrade validator-1 ./deploy/validator-1 --namespace default  --debug \                                                        pylons/pylons (devnet âš¡) Justyns-MacBook-Air
        --set-file applicationConfigtoml="./deploy/validator-1/config/config.toml" \
        --set-file applicationToml="./deploy/validator-1/config/app.toml" \
        --set-file applicationClientToml="./deploy/validator-1/config/client.toml" \
          --set pylons.image.tag=$GITHUB_SHA \
          --set containerport1=26657 \
          --set containerport2=26656 \
          --set containerport3=6060 \
          --set containerport4=1317 \
          --set containerport5=9090 \
          --set containerport6=8080 \
          --set exposedport1=26657 \
          --set exposedport2=26656 \
          --set exposedport3=6060 \
          --set exposedport4=1317 \
          --set exposedport5=9090 \
          --set exposedport6=8080 \
          --wait
        kubectl patch deployment validator-1 --patch-file deploy/validator-1/config/patch-basic-annotations.yaml
        kubectl rollout status deployment/validator-1
        kubectl get services -o wide